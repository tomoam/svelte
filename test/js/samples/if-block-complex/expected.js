/* generated by Svelte vX.Y.Z */
import {
	SvelteComponent,
	comment,
	detach,
	init,
	insert,
	make_renderer,
	noop,
	safe_not_equal,
	traverse
} from "svelte/internal";

const render = make_renderer(`<div class="divider"></div>`);

// (7:0) {#if (item.divider && item.divider.includes(1))}
function create_if_block(ctx) {
	let render_nodes = [];

	return {
		c() {
			traverse(render(), render_nodes);
		},
		m(target, anchor) {
			insert(target, render_nodes[0], anchor); /* div */
		},
		d(detaching) {
			if (detaching) detach(render_nodes[0]); /* div */
		}
	};
}

function create_fragment(ctx) {
	let if_block_anchor = comment();
	let show_if = /*item*/ ctx[0].divider && /*item*/ ctx[0].divider.includes(1);
	let if_block = show_if && create_if_block(ctx);

	return {
		c() {
			if (if_block) if_block.c();
		},
		m(target, anchor) {
			insert(target, if_block_anchor, anchor);
			if (if_block) if_block.m(target, if_block_anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(if_block_anchor);
			if (if_block) if_block.d(detaching);
		}
	};
}

function instance($$self) {
	let item = { divider: [1] };
	return [item];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Component;