/* generated by Svelte vX.Y.Z */
import {
	SvelteComponent,
	create_component,
	destroy_component,
	detach_all,
	init,
	insert_all,
	make_renderer,
	mount_component,
	noop,
	safe_not_equal,
	transition_in,
	transition_out,
	traverse
} from "svelte/internal";

import Imported from 'Imported.svelte';
const render = make_renderer(`<!> <!>`);
const node_path = () => [0,1,1];

function create_fragment(ctx) {
	let render_nodes = [];
	let imported;
	let nonimported;
	let current;
	imported = new Imported({});
	nonimported = new NonImported({});

	return {
		c() {
			traverse(render(), render_nodes, node_path());
			create_component(imported.$$.fragment);
			create_component(nonimported.$$.fragment);
		},
		m(target, anchor) {
			insert_all(target, render_nodes, [0,1,2], anchor);
			mount_component(imported, target, render_nodes[0]);
			mount_component(nonimported, target, render_nodes[2]);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(imported.$$.fragment, local);
			transition_in(nonimported.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(imported.$$.fragment, local);
			transition_out(nonimported.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			detach_all(detaching, render_nodes, [0,1,2]);
			destroy_component(imported, detaching);
			destroy_component(nonimported, detaching);
		}
	};
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;