/* generated by Svelte vX.Y.Z */
import {
	SvelteComponent,
	attr,
	detach_all,
	init,
	insert_all,
	make_renderer,
	noop,
	safe_not_equal,
	traverse
} from "svelte/internal";

const render = make_renderer(`<div data-foo="bar"></div> <div></div>`);
const node_path = () => [,1,1];

function create_fragment(ctx) {
	let render_nodes = [];

	return {
		c() {
			traverse(render(), render_nodes, node_path());
			attr(render_nodes[2], "data-foo", /*bar*/ ctx[0]);
		},
		m(target, anchor) {
			insert_all(target, render_nodes, [0,1,2], anchor);
		},
		p(ctx, [dirty]) {
			if (dirty & /*bar*/ 1) {
				attr(render_nodes[2], "data-foo", /*bar*/ ctx[0]);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			detach_all(detaching, render_nodes, [0,1,2]);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { bar } = $$props;

	$$self.$$set = $$props => {
		if ('bar' in $$props) $$invalidate(0, bar = $$props.bar);
	};

	return [bar];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { bar: 0 });
	}
}

export default Component;