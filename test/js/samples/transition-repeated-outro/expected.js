/* generated by Svelte vX.Y.Z */
import {
	SvelteComponent,
	check_outros,
	create_out_transition,
	detach,
	group_outros,
	init,
	insert,
	make_renderer,
	safe_not_equal,
	transition_in,
	transition_out,
	traverse
} from "svelte/internal";

import { fade } from 'svelte/transition';
const render = make_renderer(`<div><p>wheeee</p></div>`);

// (7:0) {#if num < 5}
function create_if_block(ctx) {
	let render_nodes = [];
	let div_outro;
	let current;

	return {
		c() {
			traverse(render(), render_nodes);
		},
		m(target, anchor) {
			insert(target, render_nodes[0], anchor); /* div */
			current = true;
		},
		i(local) {
			if (current) return;
			if (div_outro) div_outro.end(1);
			current = true;
		},
		o(local) {
			div_outro = create_out_transition(render_nodes[0], fade, {});
			current = false;
		},
		d(detaching) {
			if (detaching) detach(render_nodes[0]); /* div */
			if (detaching && div_outro) div_outro.end();
		}
	};
}

const render_1 = make_renderer(`<!>`);

function create_fragment(ctx) {
	let render_nodes = [];
	let current;
	let if_block = /*num*/ ctx[0] < 5 && create_if_block(ctx);

	return {
		c() {
			traverse(render_1(), render_nodes);
			if (if_block) if_block.c();
		},
		m(target, anchor) {
			insert(target, render_nodes[0], anchor); /* if_block */
			if (if_block) if_block.m(target, render_nodes[0]);
			current = true;
		},
		p(ctx, [dirty]) {
			if (/*num*/ ctx[0] < 5) {
				if (if_block) {
					if (dirty & /*num*/ 1) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(render_nodes[0].parentNode, render_nodes[0]);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}
		},
		i(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o(local) {
			transition_out(if_block);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(render_nodes[0]); /* if_block */
			if (if_block) if_block.d(detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { num = 1 } = $$props;

	$$self.$$set = $$props => {
		if ('num' in $$props) $$invalidate(0, num = $$props.num);
	};

	return [num];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { num: 0 });
	}
}

export default Component;